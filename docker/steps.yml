.integration_test:
  image: registry.gitlab.com/dashdevs/pfm/infrastructure/docker-images/gitlab-ci:test
  services:
  - mongo
  variables:
    MONGO_INITDB_ROOT_USERNAME: $MONGODB_USER
    MONGO_INITDB_ROOT_PASSWORD: $MONGODB_PASS
  script: 
    - cd src/
    - dotnet test --filter Category=Integration --blame
.test_code:
  image: registry.gitlab.com/dashdevs/pfm/infrastructure/docker-images/gitlab-ci:test
  except:
    - master
  script: 
    - cd src/
    - dotnet build .
    - dotnet test --filter Category=Unit --blame
    - dotnet-format --check
.build_image:
  script:
    - cd src/
    - $(aws ecr get-login --no-include-email --region eu-west-1)
    - docker build -t $IMAGE_NAME .
    - docker tag $IMAGE_NAME:latest 063523468743.dkr.ecr.eu-west-1.amazonaws.com/$IMAGE_NAME:$IMAGE_TAG
    - docker push 063523468743.dkr.ecr.eu-west-1.amazonaws.com/$IMAGE_NAME:$IMAGE_TAG
.deploy_dev:
  script:
    - aws eks --region eu-west-1 update-kubeconfig --name pfm-eks-stage
    - helm upgrade $SERVICE_NAME ./helm --set image.tag=$IMAGE_TAG --namespace dev
.deploy_stage:
  script:
    - aws eks --region eu-west-1 update-kubeconfig --name pfm-eks-stage
    - helm upgrade $SERVICE_NAME ./helm --set image.tag=$IMAGE_TAG  --set environment=$ENV_NAME --namespace stage 
.rollback_dev:
  script:
    - echo ${ENV_NAME}
    - aws eks --region eu-west-1 update-kubeconfig --name pfm-eks-stage
    - helm rollback $SERVICE_NAME 0 --namespace dev
.rollback_stage:
  script:
    - echo ${ENV_NAME}
    - aws eks --region eu-west-1 update-kubeconfig --name pfm-eks-stage
    - helm rollback $SERVICE_NAME 0 --namespace stage 